# INSTRUCTIONS
# 1. Build the image:
#    apptainer build lammps-CPU-mpi-develop.sif lammps-CPU-mpi-develop.def
#
# 2. Build the image with full debug log (for troubleshooting):
#    apptainer build --disable-cache lammps-CPU-mpi-develop.sif lammps-CPU-mpi-develop.def > build_lammps-CPU-mpi-develop.log
#
# 3. Run the image interactively (shell into it):
#    apptainer shell lammps-CPU-mpi-develop.sif
# 
# 4. Run lammps from the image (non-interactively)
     

Bootstrap: localimage
From: base.sif

%labels
    Author Ethan L. Edmunds
    Version v1.0
    Description LAMMPS CPU MPI container based on base.sif

%post
    # Set noninteractive frontend
    export DEBIAN_FRONTEND=noninteractive

    # Install dependencies needed to build LAMMPS
    apt-get update && \
        apt-get install -y --no-install-recommends \
        cmake \
        g++ \
        libopenmpi-dev \
        python3 \
        python3-dev \
        python3-pip \
        python3-numpy \
        python3-scipy \
        wget \
        curl \
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/*

    # Clone LAMMPS develop branch
    git clone --branch develop https://github.com/lammps/lammps.git /opt/lammps

    cd /opt/lammps

    # Create build directory
    mkdir build && cd build

    # Configure LAMMPS build with MPI, FFTW, no GPU, install prefix
    cmake ../cmake

    # Build and install
    make -j$(nproc)
    make install

%environment
    # Add LAMMPS binaries to PATH
    export PATH=/opt/lammps-install/bin:$PATH

%runscript
    echo "This container runs LAMMPS with MPI support."
    echo "Usage example: lmp_mpi -in input_script.in"
    exec lmp_mpi "$@"