# INSTRUCTIONS
# 1. Build the image:
#    apptainer build lammps-CPU-mpi-develop.sif lammps-CPU-mpi-develop.def
#
# 2. Build the image with full debug log (for troubleshooting):
#    apptainer build --disable-cache lammps-CPU-mpi-develop.sif lammps-CPU-mpi-develop.def > build_lammps-CPU-mpi-develop.log
#
# 3. Run the image interactively (shell into it):
#    apptainer shell lammps-CPU-mpi-develop.sif
# 
# 4. Run lammps from the image (non-interactively)

Bootstrap: docker
From: nvidia/cuda:12.5.1-devel-ubuntu24.04

%labels
    Author Ethan L. Edmunds
    Version v1.0
    Description LAMMPS CPU MPI container based on base.sif

%post
    # Set noninteractive frontend
    export DEBIAN_FRONTEND=noninteractive

    # Install dependencies needed to build LAMMPS
    apt-get update && \
    apt-get install -y --no-install-recommends \
    cmake \
    git \
    g++ \
    libopenmpi-dev \
    python3 \
    python3-dev \
    python3-pip \
    python3-numpy \
    python3-scipy \
    wget \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

    # Clone LAMMPS develop branch
    git clone --branch develop https://github.com/lammps/lammps.git /opt/lammps

    cd /opt/lammps

    # Create build directory
    mkdir build && cd build

    wget -O libpace.tar.gz https://github.com/wcwitt/lammps-user-pace/archive/main.tar.gz

    ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 || true

    # Make stubs available to the linker during build
    export LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LIBRARY_PATH}
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}

    cmake ../cmake \
        -D CMAKE_CXX_COMPILER=/opt/lammps/lib/kokkos/bin/nvcc_wrapper \
        -D CMAKE_BUILD_TYPE=Release \
        -D BUILD_MPI=on \
        -D PKG_KOKKOS=yes \
        -D Kokkos_ENABLE_SERIAL=ON \
        -D Kokkos_ARCH_AMPERE80=yes \
        -D BUILD_SHARED_LIBS=yes \
        -D BUILD_OMP=ON \
        -D Kokkos_ENABLE_CUDA=yes \
        -D CMAKE_INSTALL_PREFIX=$VIRTUAL_ENV \
        -D PACELIB_MD5=$(md5sum libpace.tar.gz | awk '{print $1}') \
        -D PKG_ML-UF3=yes \
        -D PKG_ML-PACE=yes \
        -D PKG_ML-SNAP=yes \
        -D PKG_RIGID=yes \
        -D PKG_MANYBODY=yes \
        -D PKG_MOLECULE=yes \
        -D PKG_EXTRA-PAIR=yes

        cmake --build . -j 20 

        cmake --install . 

%environment
    # Add LAMMPS binaries to PATH
    export PATH=/opt/lammps-install/bin:$PATH

    export LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LIBRARY_PATH}
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}

%runscript
    echo "This container runs LAMMPS with MPI support."
    echo "Usage example: lmp_mpi -in input_script.in"
    exec /opt/lammps/build/lmp "$@"